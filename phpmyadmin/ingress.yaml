apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phpmyadmin-service
  annotations:
    #kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.class: nginx
    #kubernetes.io/ingress.class: secondary 
    #kubernetes.io/tls-acme: "true"
    #cert-manager.io/cluster-issuer: letsencrypt-prod
    #certmanager.k8s.io/acme-challenge-type: http01
    #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    #nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: letsencrypt-staging
    #cert-manager.io/issue-temporary-certificate: "true"
    #certmanager.k8s.io/acme-http01-edit-in-place: "true"
    acme.cert-manager.io/http01-edit-in-place: "true"
    #nginx.ingress.kubernetes.io/backend-protocol: "https"
    #nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    #cert-manager.io/issue-temporary-certificate: "true"
    #service.kubernetes.io/do-loadbalancer-disown: "true"
    #cert-manager.io/issue-temporary-certificate: "true"
    #service.beta.kubernetes.io/do-loadbalancer-hostname: "zzz.nsserver.eu"
    #service.beta.kubernetes.io/scw-loadbalancer-use-hostname: "true"
    #service.beta.kubernetes.io/do-loadbalancer-hostname: "zzz.nsserver.eu"
spec:
  #ingressClassName: nginx
  tls:
    - hosts:
      - phpmyadmin.nsserver.eu
      # secretName refers to the secret containing the tls certificate
      # if it does not exist, ingress-nginx will use a self-signed certificate
      secretName: tls-secret-phpmyadmin
  rules:
  - host: phpmyadmin.nsserver.eu
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: phpmyadmin-service
            port:
              number: 80
